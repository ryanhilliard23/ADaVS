# backend/tests/services/test_vulnerability_services.py
from app.models.asset import Asset
from app.models.asset_service import AssetService
from app.models.scan import Scan
from app.models.vulnerability import Vulnerability
from app.services import vulnerability_services as vs

def test_list_and_detail_and_by_service(db_session):
    # empty first
    assert vs.list_vulnerabilities(db_session) == []

    # create tree: scan -> asset -> service -> vuln
    scan = Scan(status="completed", targets="::1")
    db_session.add(scan); db_session.flush()

    asset = Asset(scan_id=scan.id, ip_address="::1")
    db_session.add(asset); db_session.flush()

    svc = AssetService(asset_id=asset.id, port=443, protocol="tcp", service_name="https")
    db_session.add(svc); db_session.flush()

    v = Vulnerability(service_id=svc.id, template_id="X-001", severity="low", description="desc", evidence="ev")
    db_session.add(v); db_session.commit()

    lst = vs.list_vulnerabilities(db_session)
    assert len(lst) == 1
    assert lst[0]["template_id"] == "X-001"

    detail = vs.vuln_detail(db_session, v.id)
    assert detail["id"] == v.id
    assert detail["service_id"] == svc.id

    by_svc = vs.list_vulns_for_service(db_session, svc.id)
    assert len(by_svc) == 1
    assert by_svc[0]["id"] == v.id

def test_vuln_detail_not_found(db_session):
    assert vs.vuln_detail(db_session, 99999) is None
