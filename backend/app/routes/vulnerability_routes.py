from fastapi import APIRouter, Depends, HTTPException
from sqlalchemy.orm import Session
from ..models.base import get_db
from ..services import vulnerability_services

router = APIRouter(prefix="/vulnerabilities", tags=["vulnerabilities"])

# Returns all vulnerabilities in the database.
@router.get("/")
def list_vulnerabilities(db: Session = Depends(get_db)):
    return vulnerability_services.list_vulnerabilities(db)

# Returns details of a specific vulnerability.
@router.get("/{vuln_id}")
def vuln_detail(vuln_id: int, db: Session = Depends(get_db)):
    vuln = vulnerability_services.vuln_detail(db, vuln_id)
    # if not vuln:
    #     raise HTTPException(status_code=404, detail="Vulnerability not found")
    return {"message": f"GET/vulnerabilities/{vuln_id}/ endpoint hit"}

# Returns all vulnerabilities for a specific service vulnerability.
@router.get("/service/{service_id}")
def list_vulns_for_service(service_id: int, db: Session = Depends(get_db)):
    # return vulnerability_services.list_vulns_for_service(db, service_id)

    return {"message": f"GET/vulnerabilities/service/{service_id}/ endpoint hit"}